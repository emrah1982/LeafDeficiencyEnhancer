import json
import os
import glob
from pathlib import Path
import urllib.parse  # URL kodlamasını çözmek için

def convert_vott_to_yolo(json_file, output_dir=None):
    """
    VoTT JSON formatını YOLO formatına dönüştürür.
    Parametreler:
    json_file (str): Dönüştürülecek JSON dosyasının yolu
    output_dir (str, opsiyonel): Çıktı dosyalarının kaydedileceği dizin
    """
    with open(json_file, 'r', encoding='utf-8') as f:
        data = json.load(f)

    if output_dir is None:
        output_dir = os.path.dirname(json_file)

    os.makedirs(output_dir, exist_ok=True)

    img_width = data['asset']['size']['width']
    img_height = data['asset']['size']['height']

    image_name = urllib.parse.unquote(data['asset']['name'])
    image_name = os.path.splitext(image_name)[0]
    output_file = os.path.join(output_dir, f"{image_name}.txt")

    # Etiket sözlüğü - hem doğru hem yanlış yazımlar dahil
    labels = {
        "tomato__K": 0,
        "tomato_K": 0,
        "tomato__N": 1,
        "tomato_N": 1,
        "tomato__N_K": 2,
        "tomato_N_K": 2
    }

    with open(output_file, 'w', encoding='utf-8') as f_out:
        for region in data.get('regions', []):
            tag = region['tags'][0].strip()  # boşluk karakterlerine karşı önlem

            class_id = labels.get(tag, 999)
            if class_id == 999:
                print(f"⚠️ Uyarı: '{tag}' etiketi tanınmadı. '999' olarak işaretlendi. (Dosya: {os.path.basename(json_file)})")

            points = region['points']
            x_coords = [point['x'] for point in points]
            y_coords = [point['y'] for point in points]

            xmin = min(x_coords)
            xmax = max(x_coords)
            ymin = min(y_coords)
            ymax = max(y_coords)

            x_center = ((xmin + xmax) / 2) / img_width
            y_center = ((ymin + ymax) / 2) / img_height
            width = (xmax - xmin) / img_width
            height = (ymax - ymin) / img_height

            f_out.write(f"{class_id} {x_center:.6f} {y_center:.6f} {width:.6f} {height:.6f}\n")

    print(f"✅ Dönüştürme tamamlandı: {output_file}")
    return output_file


def batch_convert(json_dir, output_dir=None):
    """
    Belirtilen dizindeki tüm JSON dosyalarını YOLO formatına dönüştürür.
    Parametreler:
    json_dir (str): JSON dosyalarının bulunduğu dizin
    output_dir (str, opsiyonel): Çıktı dosyalarının kaydedileceği dizin
    """
    json_files = glob.glob(os.path.join(json_dir, "*.json"))
    if not json_files:
        print(f"🚫 Hata: '{json_dir}' içinde JSON dosyası bulunamadı.")
        return

    for json_file in json_files:
        convert_vott_to_yolo(json_file, output_dir)


# === KULLANIM ===
# Tek tek dönüştürmek için (örnek):
# convert_vott_to_yolo(r"C:\path\to\file.json", r"C:\path\to\output")

# Tüm klasörü dönüştürmek için:
batch_convert(r"C:\Users\User\Desktop\Bitki_label_2\tomato__K", "yolo_labels")
